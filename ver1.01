#include <stdio.h>
#include <stdbool.h>

#define N 3

struct person
{
    char name[20];
    char surname[20];
    int phone;
    int age;
}PersonInfo[N], b;

void connection(char *str, char *stp)
{
    int i = 0;
    while (str[i] != '\0')
    {
        i ++;
    }
    int j = 0;
    while (stp[j] != '\0')
    {
        str[i + j] = stp[j];
        j ++;
    }
    str[i + j] = '\0';
}

// void personFill(struct person* PersonInfo)
// {
//     bool loop = true;
//     int number;
//     while(loop)
//     {
//         loop = false;

//         scanf("%d", &number);
//         switch(number)
//         {
//         case 1:
//             fgets(name, 20, stdin);
//             break;
//         case 2:
//             fgets(surname, 20, stdin);
//             break;
//         case 3:
//             scanf("%d", &phone);
//             break;
//         case 4:
//             scanf("%d", &age);
//             break;

//         }
//     } 
// }

void archieve(struct person* PersonInfo)
{
    FILE *fp;
    char* path = "/home/lokobelka/Desktop/projects/database/database.txt";

    fp = fopen(path, "w+");
    if (fp = NULL)
    {
        printf("File not opened. Error.\n");
        exit(1);
    }
    else
    {
        printf("File opened. Archiving...\n");
    }

    fwrite(&PersonInfo, sizeof(PersonInfo), 1, fp);
}

void unarchieve(struct person* PersonInfo)
{
    FILE *fp;
    char *path = "/home/lokobelka/Desktop/projects/database/database.txt";
    
    
    fp = fopen(path, "r+");
    if (fp == NULL)
    {
        printf("File not opened. Error.\n");
        exit(1);
    }
    else
    {
        printf("File opened. Unarchiving...\n");
    }
    
    fread(&b, sizeof(PersonInfo), 1, fp);
    for (int i = 0; i < N; i ++) 
    {
       printf("Name: %s    Surname: %s    Phone number: %d    Age: %d\n", (PersonInfo + i)->name, (PersonInfo + i)->surname, (PersonInfo + i)->phone, (PersonInfo + i)->age);
    }

}


int main()
{
    bool loop = true;
    while(loop)
    {
        loop = false;

        scanf("%s %s %d %d", &PersonInfo->name, &PersonInfo->surname, &PersonInfo->phone, &PersonInfo->age);
    } 
    archieve(PersonInfo);

    unarchieve(PersonInfo);
    return 0;
}
